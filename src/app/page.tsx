"use client";
import { useEffect, useState } from "react";
import { FetchPosts } from "../lib/FetchPosts";
import BlogList from "../components/BlogList";
import FeaturedPosts from "../components/FeaturedPost";

interface Post {
  id: number;
  title: string;
  description: string;
  cover_image: string | null;
  published_at: string;
}

const Home = () => {
  const [posts, setPosts] = useState<Post[]>([]);
  const [loading, setLoading] = useState<boolean>(true);
  const [currentPage, setCurrentPage] = useState<number>(1);
  const postsPerPage = 5; // Number of posts per page

  useEffect(() => {
    const fetchPosts = async () => {
      try {
        const fetchedPosts = await FetchPosts();
        setPosts(fetchedPosts);
      } catch (error) {
        console.error("Error fetching posts:", error);
      } finally {
        setLoading(false);
      }
    };

    fetchPosts();
  }, []);

  // shuffle the posts array
  const shufflePosts = (array: Post[]) => {
    for (let i = array.length - 1; i > 0; i--) {
      const j = Math.floor(Math.random() * (i + 1));
      [array[i], array[j]] = [array[j], array[i]];
    }
    return array;
  };

  const shuffledPosts = shufflePosts([...posts]);
  const featuredPosts = shuffledPosts.slice(0, 3); // First 3 posts as featured

  // Calculate total pages
  const totalPages = Math.ceil(shuffledPosts.length / postsPerPage);

  // Get current posts based on the current page
  const indexOfLastPost = currentPage * postsPerPage;
  const indexOfFirstPost = indexOfLastPost - postsPerPage;
  const currentPosts = shuffledPosts.slice(indexOfFirstPost, indexOfLastPost);

  // Handle page change
  const paginate = (pageNumber: number) => setCurrentPage(pageNumber);

  if (loading) {
    return (
      <div className="w-screen h-screen flex justify-center items-center">
        <div className="text-xl font-semibold">Loading...</div>
      </div>
    );
  }

  return (
    <div className="container mx-auto px-4">
      <h1 className="text-6xl text-gray-100 font-bold text-center m-8">
        AI Blogs
      </h1>
      <p className="text-lg text-gray-100 text-center mb-8">
        We love A.I. and welcome you to our AI blog. There is so much going on
        in the field of AI and our goal is to keep you up-to-date in innovative,
        informative, and entertaining ways. We see this website as a form of
        digital art as all images and text were generated by artificial
        intelligence (with a little bit of human help). This AI blog is written
        and designed by impressive AIs, and humans merely perform copy & paste
        operations - we showcase the progress of AI capabilities on all fronts
        (text, image, video, audio, design, technology, education, etc).
      </p>
      {featuredPosts.length > 0 && <FeaturedPosts posts={featuredPosts} />}
      <h2 className="text-4xl text-green-100 font-serif font-bold text-center m-6">
        Blog Posts
      </h2>
      <BlogList
        blogs={currentPosts.map((post) => ({
          id: post.id.toString(),
          title: post.title,
          description: post.description,
          image: post.cover_image ?? "/default-image.jpg",
        }))}
      />

      <Pagination
        totalPages={totalPages}
        paginate={paginate}
        currentPage={currentPage}
      />
    </div>
  );
};

interface PaginationProps {
  totalPages: number;
  paginate: (pageNumber: number) => void;
  currentPage: number;
}

const Pagination: React.FC<PaginationProps> = ({
  totalPages,
  paginate,
  currentPage,
}) => {
  const pageNumbers = [];

  for (let i = 1; i <= totalPages; i++) {
    pageNumbers.push(i);
  }

  return (
    <nav className="flex justify-center mt-8">
      <ul className="inline-flex items-center space-x-2 m-4">
        {pageNumbers.map((number) => (
          <li key={number}>
            <button
              onClick={() => paginate(number)}
              className={`px-3 py-2 border rounded ${
                currentPage === number
                  ? "bg-blue-500 text-white"
                  : "bg-white text-blue-500"
              }`}
            >
              {number}
            </button>
          </li>
        ))}
      </ul>
    </nav>
  );
};

export default Home;
